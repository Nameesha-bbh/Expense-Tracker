{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","SetEnteredTitle","enteredAmount","SetEnteredAmount","enteredDate","SetEnteredDate","onSubmit","event","preventDefault","expenseItems","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpenseList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","ExpenseChart","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cdedaa63.chunk.js","sourcesContent":["import './ExpenseForm.css';\r\nimport {React , useState } from 'react';\r\nfunction ExpenseForm(props){\r\n\r\n    const [enteredTitle , SetEnteredTitle] = useState('');\r\n    const [enteredAmount , SetEnteredAmount] = useState('');\r\n    const [enteredDate , SetEnteredDate] = useState('');\r\n\r\n    function titleChangeHandler(event){\r\n        SetEnteredTitle(event.target.value);\r\n    }\r\n\r\n    function amountChangeHandler(event){\r\n        SetEnteredAmount(event.target.value);\r\n    }\r\n\r\n    function dateChangeHandler(event){\r\n        SetEnteredDate(event.target.value);\r\n    }\r\n\r\n    function submitHandler(event){\r\n        event.preventDefault();\r\n        const expenseItems = {\r\n            title : enteredTitle,\r\n            amount : +enteredAmount,\r\n            date : new Date(enteredDate)\r\n        }\r\n        props.onSaveExpenseData(expenseItems);\r\n        SetEnteredAmount('');\r\n        SetEnteredDate('');\r\n        SetEnteredTitle('');\r\n    }\r\n    return(\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label className=\"new-expense__control label\">Title</label>\r\n                    <input type=\"text\" \r\n                            className=\"new-expense__control input\" \r\n                            value = {enteredTitle}\r\n                            onChange = {titleChangeHandler}/>\r\n                </div>\r\n\r\n                <div className=\"new-expense__control\">\r\n                    <label className=\"new-expense__control label\">Amount</label>\r\n                    <input type=\"number\" \r\n                            className=\"new-expense__control input\" \r\n                            min=\"100\" \r\n                            step=\"100\" \r\n                            value = {enteredAmount}\r\n                            onChange={amountChangeHandler}/>\r\n                </div>\r\n\r\n                <div className=\"new-expense__control\">\r\n                    <label className=\"new-expense__control label\">Date</label>\r\n                    <input type=\"date\" \r\n                            min=\"2019-01-01\" \r\n                            max=\"2022-12-31\" \r\n                            className=\"new-expense__control input\"\r\n                            value = {enteredDate}\r\n                            onChange={dateChangeHandler}/>\r\n                </div>\r\n\r\n                <div className=\"new-expense__actions\">\r\n                    <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n                    <button type=\"submit\">Add Expense</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\nexport default ExpenseForm;","import './NewExpense.css';\r\nimport {useState} from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport React from 'react';\r\nfunction NewExpense(props){\r\n    const [isEditing , setIsEditing] = useState(false);\r\n    function saveExpenseDataHandler(enteredExpenseData){\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id : Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n    };\r\n    function isEditingHandler(){\r\n        setIsEditing(true);\r\n    }\r\n    function stopEditingHandler(){\r\n        setIsEditing(false);\r\n    }\r\n    return(\r\n        <div className=\"new-expense\">\r\n            {!isEditing && <button onClick={isEditingHandler}>Add New Expense</button>}\r\n            {isEditing && <ExpenseForm onCancel={stopEditingHandler} onSaveExpenseData = {saveExpenseDataHandler} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewExpense;","import React from 'react';\r\n\r\nimport './ExpenseFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react';\r\n\r\nimport './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className='expense-date'>\r\n      <div className='expense-date__month'>{month}</div>\r\n      <div className='expense-date__year'>{year}</div>\r\n      <div className='expense-date__day'>{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;","import React from 'react';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n       <div className='expense-item'>\r\n        <ExpenseDate date={props.date} />\r\n        <div className='expense-item__description'>\r\n          <h2>{props.title}</h2>\r\n          <div className='expense-item__price'>Rs.{props.amount}</div>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;","import ExpenseItem from './ExpenseItem';\r\nimport './ExpenseList.css';\r\nfunction ExpenseList(props)\r\n{\r\n  if(props.items.length === 0)\r\n  {\r\n      return <h2 className=\"expenses-list__fallback\">No expenses found</h2>\r\n  }\r\n  return(\r\n        <ul className=\"expenses-list\">\r\n            {props.items.map((expense) => (\r\n            <ExpenseItem\r\n                key = {expense.id}\r\n                title = {expense.title}\r\n                amount = {expense.amount}\r\n                date = {expense.date}\r\n            />\r\n    ))}\r\n        </ul>\r\n  )\r\n}\r\n\r\nexport default ExpenseList;","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div\r\n          className='chart-bar__fill'\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from 'react';\r\n\r\n\r\nimport ExpenseFilter from './ExpenseFilter';\r\nimport ExpenseList from './ExpenseList';\r\nimport ExpenseChart from './ExpenseChart';\r\nimport './Expenses.css';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div className='expenses'>\r\n        <ExpenseFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpenseChart expenses={filteredExpenses} />\r\n        <ExpenseList items={filteredExpenses} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;","import React, { useState } from 'react';\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 100,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2',\n   title: 'New TV',\n    amount: 7999 ,\n    date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 2940,\n    date: new Date(2019, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 4500,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}